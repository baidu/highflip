package com.webank.ai.fate.common.deserializer;

import com.baidu.highflip.core.entity.dag.Graph;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.webank.ai.fate.client.form.dsl.Dsl;
import com.webank.ai.fate.client.form.dsl.DslConf;
import com.webank.ai.fate.translator.DSLTranslator;
import org.springframework.lang.Nullable;

import java.util.HashMap;
import java.util.Map;

public class SerializerUtils {

    private static final ObjectMapper objectMapper = new ObjectMapper();

    private SerializerUtils() {
    }

    public static <T> Map<String, T> mapObjectDeserialize(String object, Class<T> tClass)
            throws JsonProcessingException {
        if (object == null || object.isBlank()) {
            return null;
        }
        Map<String, T> ret = new HashMap<>();
        Map<String, Object> map = objectMapper.readValue(object, new TypeReference<Map<String, Object>>() {
        });
        for (String tempKey : map.keySet()) {
            Object tempValue = map.get(tempKey);
            if (tempValue != null) {
                String decodeValue = objectMapper.writeValueAsString(tempValue);
                if (tClass.isAssignableFrom(String.class)) {
                    //noinspection unchecked
                    ret.put(tempKey, (T) decodeValue);
                } else {
                    T result = objectMapper.readValue(decodeValue, tClass);
                    ret.put(tempKey, result);
                }
            }
        }
        return ret;
    }

    public static String toJsonString(Object object) throws JsonProcessingException {
        return objectMapper.writeValueAsString(object);
    }

    public static <T> T deserialize(String json, Class<T> tClass) throws JsonProcessingException {
        return objectMapper.readValue(json, tClass);
    }

    @Nullable
    public static <T> T deserializeType(String json, TypeReference<T> typeReference) throws JsonProcessingException {
        if (json == null || json.isBlank()) {
            return null;
        }
        return objectMapper.readValue(json, typeReference);
    }

    public static void main(String[] args) throws JsonProcessingException {
        Dsl dsl = SerializerUtils.deserialize("{\n" + "    \"components\": {\n" + "        \"reader_0\": {\n"
                + "            \"module\": \"Reader\",\n" + "            \"output\": {\n"
                + "                \"data\": [\n" + "                    \"data\"\n" + "                ]\n"
                + "            }\n" + "        },\n" + "        \"reader_1\": {\n"
                + "            \"module\": \"Reader\",\n" + "            \"output\": {\n"
                + "                \"data\": [\n" + "                    \"data\"\n" + "                ]\n"
                + "            }\n" + "        },\n" + "        \"data_transform_0\": {\n"
                + "            \"module\": \"DataTransform\",\n" + "            \"input\": {\n"
                + "                \"data\": {\n" + "                    \"data\": [\n"
                + "                        \"reader_0.data\"\n" + "                    ]\n" + "                }\n"
                + "            },\n" + "            \"output\": {\n" + "                \"data\": [\n"
                + "                    \"data\"\n" + "                ],\n" + "                \"model\": [\n"
                + "                    \"model\"\n" + "                ]\n" + "            }\n" + "        },\n"
                + "        \"data_transform_1\": {\n" + "            \"module\": \"DataTransform\",\n"
                + "            \"input\": {\n" + "                \"data\": {\n" + "                    \"data\": [\n"
                + "                        \"reader_1.data\"\n" + "                    ]\n" + "                }\n"
                + "            },\n" + "            \"output\": {\n" + "                \"data\": [\n"
                + "                    \"data\"\n" + "                ],\n" + "                \"model\": [\n"
                + "                    \"model\"\n" + "                ]\n" + "            }\n" + "        },\n"
                + "        \"intersection_0\": {\n" + "            \"module\": \"Intersection\",\n"
                + "            \"input\": {\n" + "                \"data\": {\n" + "                    \"data\": [\n"
                + "                        \"data_transform_0.data\"\n" + "                    ]\n"
                + "                }\n" + "            },\n" + "            \"output\": {\n"
                + "                \"data\": [\n" + "                    \"data\"\n" + "                ],\n"
                + "                \"cache\": [\n" + "                    \"cache\"\n" + "                ]\n"
                + "            }\n" + "        },\n" + "        \"intersection_1\": {\n"
                + "            \"module\": \"Intersection\",\n" + "            \"input\": {\n"
                + "                \"data\": {\n" + "                    \"data\": [\n"
                + "                        \"data_transform_1.data\"\n" + "                    ]\n"
                + "                }\n" + "            },\n" + "            \"output\": {\n"
                + "                \"data\": [\n" + "                    \"data\"\n" + "                ],\n"
                + "                \"cache\": [\n" + "                    \"cache\"\n" + "                ]\n"
                + "            }\n" + "        },\n" + "        \"hetero_nn_0\": {\n"
                + "            \"module\": \"HeteroNN\",\n" + "            \"input\": {\n"
                + "                \"data\": {\n" + "                    \"train_data\": [\n"
                + "                        \"intersection_0.data\"\n" + "                    ],\n"
                + "                    \"validate_data\": [\n" + "                        \"intersection_1.data\"\n"
                + "                    ]\n" + "                }\n" + "            },\n" + "            \"output\": {\n"
                + "                \"data\": [\n" + "                    \"data\"\n" + "                ],\n"
                + "                \"model\": [\n" + "                    \"model\"\n" + "                ]\n"
                + "            }\n" + "        },\n" + "        \"hetero_nn_1\": {\n"
                + "            \"module\": \"HeteroNN\",\n" + "            \"input\": {\n"
                + "                \"data\": {\n" + "                    \"test_data\": [\n"
                + "                        \"intersection_1.data\"\n" + "                    ]\n"
                + "                },\n" + "                \"model\": [\n"
                + "                    \"hetero_nn_0.model\"\n" + "                ]\n" + "            },\n"
                + "            \"output\": {\n" + "                \"data\": [\n" + "                    \"data\"\n"
                + "                ],\n" + "                \"model\": [\n" + "                    \"model\"\n"
                + "                ]\n" + "            }\n" + "        },\n" + "        \"evaluation_0\": {\n"
                + "            \"module\": \"Evaluation\",\n" + "            \"input\": {\n"
                + "                \"data\": {\n" + "                    \"data\": [\n"
                + "                        \"hetero_nn_0.data\",\n" + "                        \"hetero_nn_1.data\"\n"
                + "                    ]\n" + "                }\n" + "            },\n" + "            \"output\": {\n"
                + "                \"data\": [\n" + "                    \"data\"\n" + "                ]\n"
                + "            }\n" + "        }\n" + "    }\n" + "}", Dsl.class);
        DslConf dslConf = SerializerUtils.deserialize("{\n" + "    \"dsl_version\": 2,\n" + "    \"role\": {\n"
                + "        \"host\": [\n" + "            10000\n" + "        ],\n" + "        \"guest\": [\n"
                + "            9999\n" + "        ]\n" + "    },\n" + "    \"component_parameters\": {\n"
                + "        \"role\": {\n" + "            \"guest\": {\n" + "                \"0\": {\n"
                + "                    \"data_transform_0\": {\n" + "                        \"with_label\": true\n"
                + "                    },\n" + "                    \"hetero_nn_0\": {\n"
                + "                        \"bottom_nn_define\": {\n"
                + "                            \"class_name\": \"Sequential\",\n"
                + "                            \"config\": {\n"
                + "                                \"name\": \"sequential\",\n"
                + "                                \"layers\": [\n" + "                                    {\n"
                + "                                        \"class_name\": \"InputLayer\",\n"
                + "                                        \"config\": {\n"
                + "                                            \"batch_input_shape\": [\n"
                + "                                                null,\n"
                + "                                                10\n"
                + "                                            ],\n"
                + "                                            \"dtype\": \"float32\",\n"
                + "                                            \"sparse\": false,\n"
                + "                                            \"ragged\": false,\n"
                + "                                            \"name\": \"dense_input\"\n"
                + "                                        }\n" + "                                    },\n"
                + "                                    {\n"
                + "                                        \"class_name\": \"Dense\",\n"
                + "                                        \"config\": {\n"
                + "                                            \"name\": \"dense\",\n"
                + "                                            \"trainable\": true,\n"
                + "                                            \"batch_input_shape\": [\n"
                + "                                                null,\n"
                + "                                                10\n"
                + "                                            ],\n"
                + "                                            \"dtype\": \"float32\",\n"
                + "                                            \"units\": 3,\n"
                + "                                            \"activation\": \"relu\",\n"
                + "                                            \"use_bias\": true,\n"
                + "                                            \"kernel_initializer\": {\n"
                + "                                                \"class_name\": \"Constant\",\n"
                + "                                                \"config\": {\n"
                + "                                                    \"value\": 1\n"
                + "                                                }\n"
                + "                                            },\n"
                + "                                            \"bias_initializer\": {\n"
                + "                                                \"class_name\": \"Zeros\",\n"
                + "                                                \"config\": {}\n"
                + "                                            },\n"
                + "                                            \"kernel_regularizer\": null,\n"
                + "                                            \"bias_regularizer\": null,\n"
                + "                                            \"activity_regularizer\": null,\n"
                + "                                            \"kernel_constraint\": null,\n"
                + "                                            \"bias_constraint\": null\n"
                + "                                        }\n" + "                                    }\n"
                + "                                ]\n" + "                            },\n"
                + "                            \"keras_version\": \"2.4.0\",\n"
                + "                            \"backend\": \"tensorflow\"\n" + "                        },\n"
                + "                        \"top_nn_define\": {\n"
                + "                            \"class_name\": \"Sequential\",\n"
                + "                            \"config\": {\n"
                + "                                \"name\": \"sequential_2\",\n"
                + "                                \"layers\": [\n" + "                                    {\n"
                + "                                        \"class_name\": \"InputLayer\",\n"
                + "                                        \"config\": {\n"
                + "                                            \"batch_input_shape\": [\n"
                + "                                                null,\n"
                + "                                                2\n"
                + "                                            ],\n"
                + "                                            \"dtype\": \"float32\",\n"
                + "                                            \"sparse\": false,\n"
                + "                                            \"ragged\": false,\n"
                + "                                            \"name\": \"dense_2_input\"\n"
                + "                                        }\n" + "                                    },\n"
                + "                                    {\n"
                + "                                        \"class_name\": \"Dense\",\n"
                + "                                        \"config\": {\n"
                + "                                            \"name\": \"dense_2\",\n"
                + "                                            \"trainable\": true,\n"
                + "                                            \"batch_input_shape\": [\n"
                + "                                                null,\n"
                + "                                                2\n"
                + "                                            ],\n"
                + "                                            \"dtype\": \"float32\",\n"
                + "                                            \"units\": 1,\n"
                + "                                            \"activation\": \"sigmoid\",\n"
                + "                                            \"use_bias\": true,\n"
                + "                                            \"kernel_initializer\": {\n"
                + "                                                \"class_name\": \"Constant\",\n"
                + "                                                \"config\": {\n"
                + "                                                    \"value\": 1\n"
                + "                                                }\n"
                + "                                            },\n"
                + "                                            \"bias_initializer\": {\n"
                + "                                                \"class_name\": \"Zeros\",\n"
                + "                                                \"config\": {}\n"
                + "                                            },\n"
                + "                                            \"kernel_regularizer\": null,\n"
                + "                                            \"bias_regularizer\": null,\n"
                + "                                            \"activity_regularizer\": null,\n"
                + "                                            \"kernel_constraint\": null,\n"
                + "                                            \"bias_constraint\": null\n"
                + "                                        }\n" + "                                    }\n"
                + "                                ]\n" + "                            },\n"
                + "                            \"keras_version\": \"2.4.0\",\n"
                + "                            \"backend\": \"tensorflow\"\n" + "                        },\n"
                + "                        \"interactive_layer_define\": {\n"
                + "                            \"class_name\": \"Sequential\",\n"
                + "                            \"config\": {\n"
                + "                                \"name\": \"sequential_1\",\n"
                + "                                \"layers\": [\n" + "                                    {\n"
                + "                                        \"class_name\": \"InputLayer\",\n"
                + "                                        \"config\": {\n"
                + "                                            \"batch_input_shape\": [\n"
                + "                                                null,\n"
                + "                                                2\n"
                + "                                            ],\n"
                + "                                            \"dtype\": \"float32\",\n"
                + "                                            \"sparse\": false,\n"
                + "                                            \"ragged\": false,\n"
                + "                                            \"name\": \"dense_1_input\"\n"
                + "                                        }\n" + "                                    },\n"
                + "                                    {\n"
                + "                                        \"class_name\": \"Dense\",\n"
                + "                                        \"config\": {\n"
                + "                                            \"name\": \"dense_1\",\n"
                + "                                            \"trainable\": true,\n"
                + "                                            \"batch_input_shape\": [\n"
                + "                                                null,\n"
                + "                                                2\n"
                + "                                            ],\n"
                + "                                            \"dtype\": \"float32\",\n"
                + "                                            \"units\": 2,\n"
                + "                                            \"activation\": \"linear\",\n"
                + "                                            \"use_bias\": true,\n"
                + "                                            \"kernel_initializer\": {\n"
                + "                                                \"class_name\": \"Constant\",\n"
                + "                                                \"config\": {\n"
                + "                                                    \"value\": 1\n"
                + "                                                }\n"
                + "                                            },\n"
                + "                                            \"bias_initializer\": {\n"
                + "                                                \"class_name\": \"Zeros\",\n"
                + "                                                \"config\": {}\n"
                + "                                            },\n"
                + "                                            \"kernel_regularizer\": null,\n"
                + "                                            \"bias_regularizer\": null,\n"
                + "                                            \"activity_regularizer\": null,\n"
                + "                                            \"kernel_constraint\": null,\n"
                + "                                            \"bias_constraint\": null\n"
                + "                                        }\n" + "                                    }\n"
                + "                                ]\n" + "                            },\n"
                + "                            \"keras_version\": \"2.4.0\",\n"
                + "                            \"backend\": \"tensorflow\"\n" + "                        }\n"
                + "                    },\n" + "                    \"reader_1\": {\n"
                + "                        \"table\": {\n"
                + "                            \"name\": \"breast_hetero_guest\",\n"
                + "                            \"namespace\": \"experiment\"\n" + "                        }\n"
                + "                    },\n" + "                    \"data_transform_1\": {\n"
                + "                        \"with_label\": true\n" + "                    },\n"
                + "                    \"reader_0\": {\n" + "                        \"table\": {\n"
                + "                            \"name\": \"breast_hetero_guest\",\n"
                + "                            \"namespace\": \"experiment\"\n" + "                        }\n"
                + "                    }\n" + "                }\n" + "            },\n" + "            \"host\": {\n"
                + "                \"0\": {\n" + "                    \"data_transform_0\": {\n"
                + "                        \"with_label\": false\n" + "                    },\n"
                + "                    \"hetero_nn_0\": {\n" + "                        \"bottom_nn_define\": {\n"
                + "                            \"class_name\": \"Sequential\",\n"
                + "                            \"config\": {\n"
                + "                                \"name\": \"sequential_3\",\n"
                + "                                \"layers\": [\n" + "                                    {\n"
                + "                                        \"class_name\": \"InputLayer\",\n"
                + "                                        \"config\": {\n"
                + "                                            \"batch_input_shape\": [\n"
                + "                                                null,\n"
                + "                                                20\n"
                + "                                            ],\n"
                + "                                            \"dtype\": \"float32\",\n"
                + "                                            \"sparse\": false,\n"
                + "                                            \"ragged\": false,\n"
                + "                                            \"name\": \"dense_3_input\"\n"
                + "                                        }\n" + "                                    },\n"
                + "                                    {\n"
                + "                                        \"class_name\": \"Dense\",\n"
                + "                                        \"config\": {\n"
                + "                                            \"name\": \"dense_3\",\n"
                + "                                            \"trainable\": true,\n"
                + "                                            \"batch_input_shape\": [\n"
                + "                                                null,\n"
                + "                                                20\n"
                + "                                            ],\n"
                + "                                            \"dtype\": \"float32\",\n"
                + "                                            \"units\": 3,\n"
                + "                                            \"activation\": \"relu\",\n"
                + "                                            \"use_bias\": true,\n"
                + "                                            \"kernel_initializer\": {\n"
                + "                                                \"class_name\": \"Constant\",\n"
                + "                                                \"config\": {\n"
                + "                                                    \"value\": 1\n"
                + "                                                }\n"
                + "                                            },\n"
                + "                                            \"bias_initializer\": {\n"
                + "                                                \"class_name\": \"Zeros\",\n"
                + "                                                \"config\": {}\n"
                + "                                            },\n"
                + "                                            \"kernel_regularizer\": null,\n"
                + "                                            \"bias_regularizer\": null,\n"
                + "                                            \"activity_regularizer\": null,\n"
                + "                                            \"kernel_constraint\": null,\n"
                + "                                            \"bias_constraint\": null\n"
                + "                                        }\n" + "                                    }\n"
                + "                                ]\n" + "                            },\n"
                + "                            \"keras_version\": \"2.4.0\",\n"
                + "                            \"backend\": \"tensorflow\"\n" + "                        },\n"
                + "                        \"interactive_layer_define\": {\n"
                + "                            \"class_name\": \"Sequential\",\n"
                + "                            \"config\": {\n"
                + "                                \"name\": \"sequential_4\",\n"
                + "                                \"layers\": [\n" + "                                    {\n"
                + "                                        \"class_name\": \"InputLayer\",\n"
                + "                                        \"config\": {\n"
                + "                                            \"batch_input_shape\": [\n"
                + "                                                null,\n"
                + "                                                2\n"
                + "                                            ],\n"
                + "                                            \"dtype\": \"float32\",\n"
                + "                                            \"sparse\": false,\n"
                + "                                            \"ragged\": false,\n"
                + "                                            \"name\": \"dense_4_input\"\n"
                + "                                        }\n" + "                                    },\n"
                + "                                    {\n"
                + "                                        \"class_name\": \"Dense\",\n"
                + "                                        \"config\": {\n"
                + "                                            \"name\": \"dense_4\",\n"
                + "                                            \"trainable\": true,\n"
                + "                                            \"batch_input_shape\": [\n"
                + "                                                null,\n"
                + "                                                2\n"
                + "                                            ],\n"
                + "                                            \"dtype\": \"float32\",\n"
                + "                                            \"units\": 2,\n"
                + "                                            \"activation\": \"linear\",\n"
                + "                                            \"use_bias\": true,\n"
                + "                                            \"kernel_initializer\": {\n"
                + "                                                \"class_name\": \"Constant\",\n"
                + "                                                \"config\": {\n"
                + "                                                    \"value\": 1\n"
                + "                                                }\n"
                + "                                            },\n"
                + "                                            \"bias_initializer\": {\n"
                + "                                                \"class_name\": \"Zeros\",\n"
                + "                                                \"config\": {}\n"
                + "                                            },\n"
                + "                                            \"kernel_regularizer\": null,\n"
                + "                                            \"bias_regularizer\": null,\n"
                + "                                            \"activity_regularizer\": null,\n"
                + "                                            \"kernel_constraint\": null,\n"
                + "                                            \"bias_constraint\": null\n"
                + "                                        }\n" + "                                    }\n"
                + "                                ]\n" + "                            },\n"
                + "                            \"keras_version\": \"2.4.0\",\n"
                + "                            \"backend\": \"tensorflow\"\n" + "                        }\n"
                + "                    },\n" + "                    \"reader_1\": {\n"
                + "                        \"table\": {\n"
                + "                            \"name\": \"breast_hetero_host\",\n"
                + "                            \"namespace\": \"experiment\"\n" + "                        }\n"
                + "                    },\n" + "                    \"data_transform_1\": {\n"
                + "                        \"with_label\": false\n" + "                    },\n"
                + "                    \"reader_0\": {\n" + "                        \"table\": {\n"
                + "                            \"name\": \"breast_hetero_host\",\n"
                + "                            \"namespace\": \"experiment\"\n" + "                        }\n"
                + "                    }\n" + "                }\n" + "            }\n" + "        },\n"
                + "        \"common\": {\n" + "            \"hetero_nn_0\": {\n" + "                \"epochs\": 3,\n"
                + "                \"interactive_layer_lr\": 0.15,\n" + "                \"batch_size\": -1,\n"
                + "                \"early_stop\": \"diff\",\n" + "                \"callback_param\": {\n"
                + "                    \"callbacks\": [\n" + "                        \"ModelCheckpoint\"\n"
                + "                    ],\n" + "                    \"save_freq\": \"epoch\",\n"
                + "                    \"validation_freqs\": 1,\n"
                + "                    \"use_first_metric_only\": true,\n"
                + "                    \"early_stopping_rounds\": 15,\n" + "                    \"metrics\": [\n"
                + "                        \"AUC\"\n" + "                    ]\n" + "                },\n"
                + "                \"optimizer\": {\n" + "                    \"learning_rate\": 0.15,\n"
                + "                    \"decay\": 0.0,\n" + "                    \"momentum\": 0.0,\n"
                + "                    \"nesterov\": false,\n" + "                    \"optimizer\": \"SGD\"\n"
                + "                },\n" + "                \"loss\": \"binary_crossentropy\",\n"
                + "                \"bottom_nn_define\": null,\n" + "                \"top_nn_define\": null,\n"
                + "                \"interactive_layer_define\": null,\n"
                + "                \"config_type\": \"keras\"\n" + "            },\n"
                + "            \"hetero_nn_1\": {\n" + "                \"optimizer\": null,\n"
                + "                \"bottom_nn_define\": null,\n" + "                \"top_nn_define\": null,\n"
                + "                \"interactive_layer_define\": null,\n"
                + "                \"config_type\": \"keras\"\n" + "            }\n" + "        }\n" + "    }\n" + "}", DslConf.class);
        DSLTranslator.FateDAG fateDAG = new DSLTranslator.FateDAG();
        fateDAG.setConf(dslConf);
        fateDAG.setDsl(dsl);
        DSLTranslator dslTranslator = new DSLTranslator();
        Graph graph = dslTranslator.translate(fateDAG);
        DSLTranslator.FateDAG fateDAG1 = dslTranslator.translate(graph);
        System.out.println(toJsonString(fateDAG1));
        System.out.println(toJsonString(fateDAG));
    }
}
